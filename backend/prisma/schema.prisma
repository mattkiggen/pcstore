// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  firstName String @db.VarChar(50)
  lastName String @db.VarChar(50)
  email String @db.VarChar(255) @unique
  phone String? @db.VarChar(15)
  password String @db.VarChar(2000)
  streetNumber String? @db.VarChar(10)
  streetName String? @db.VarChar(255)
  city String? @db.VarChar(50)
  postalCode String? @db.VarChar(10)
  dateRegistered DateTime @default(now())
  isAdmin Boolean @default(false)
  orders Order[]
}

model Category {
  id Int @id @default(autoincrement())
  name String @db.VarChar(50)
  products Product[]
}

model Product {
  id Int @id @default(autoincrement())
  title String
  description String
  image String @db.VarChar(500)
  price Decimal @db.Decimal(10,2)
  numberInStock Int @default(0)
  orderDetails OrderDetail[]
  category Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

model Order {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  datePlaced DateTime @default(now())
  dateFulfilled DateTime?
  status String @db.VarChar(255) @default("processing")
  total Decimal @db.Decimal(10,2)
  hasBeenPaid Boolean @default(false)
  orderDetails OrderDetail[]
}

model OrderDetail {
  id Int @id @default(autoincrement())
  order Order @relation(fields: [orderId], references: [id])
  orderId Int
  product Product @relation(fields: [productId], references: [id])
  productId Int
  quantity Int @default(1)
}